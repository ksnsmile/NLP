#자체 정규식 스테머 작성법

import re


# =============================================================================
# ^와 $는 문자열의 시작과 끝을 의미합니다.
# (.*?)는 가능한 가장 짧은 어근 부분을 캡처합니다. ?가 없으면 최대 길이의 어근을 잡을 수 있습니다.
# (ing|ly|ed|ious|ies|ive|es|s|ment)?는 선택적으로 붙는 접미사를 캡처
# =============================================================================

def stem(word):
    splits = re.findall(r'^(.*?)(ing|ly|ed|ious|ies|ive|es|s|ment)?$', word)
    stem = splits[0][0]
    return stem


#\w+: 하나 이상의 문자로 이루어진 단어를 찾습니다.
#\S\w*: 공백이 아닌 문자(\S)로 시작하는 문자열 그 뒤에 문자열이 0개이상 올수 있다.
raw = "김성남은 캡스톤 디자인 수업을 진행하고 있다."
tokens = re.findall(r'\w+|\S\w*', raw)
print(tokens)

for t in tokens:
    print("'"+stem(t)+"'")
    
    
# =============================================================================
# 왜 토큰화와 어근화를 하느냐
# 
# 토큰화 (Tokenization): 입력 문장을 개별 **단어와 기호(구두점)**로 나누는 작업
# 
# 어근 추출 (Stemming): 단어에서 접미사를 제거하여 기본 형태의 어근을 남기는 작업
# =============================================================================
